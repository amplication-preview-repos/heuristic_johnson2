/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Dice as PrismaDice } from "@prisma/client";

export class DiceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DiceCountArgs, "select">): Promise<number> {
    return this.prisma.dice.count(args);
  }

  async diceItems(args: Prisma.DiceFindManyArgs): Promise<PrismaDice[]> {
    return this.prisma.dice.findMany(args);
  }
  async dice(args: Prisma.DiceFindUniqueArgs): Promise<PrismaDice | null> {
    return this.prisma.dice.findUnique(args);
  }
  async createDice(args: Prisma.DiceCreateArgs): Promise<PrismaDice> {
    return this.prisma.dice.create(args);
  }
  async updateDice(args: Prisma.DiceUpdateArgs): Promise<PrismaDice> {
    return this.prisma.dice.update(args);
  }
  async deleteDice(args: Prisma.DiceDeleteArgs): Promise<PrismaDice> {
    return this.prisma.dice.delete(args);
  }
}
